{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Projects\\\\mern-book-v1\\\\client\\\\src\\\\components\\\\showTodoList.jsx\",\n    _s = $RefreshSig$();\n\n// This component will READ all docs from database.\n// Use axios to send GET req to backend to fetch data, store with \"setTodo\" in \"todo\" state.\n// Use useEffect for GET to load data when page loads.\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { UpdateTodo } from \"./updateTodo\";\nimport { FaPlusCircle } from \"react-icons/fa\";\nimport { FaCog } from \"react-icons/fa\";\nimport { FaTrash } from \"react-icons/fa\"; // TodoCard component - displays contents of todo. Use map to iterate over todo and pass contents to component.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoCard(_ref) {\n  let {\n    data,\n    handleEdit,\n    handleDelete\n  } = _ref;\n  const {\n    _id,\n    title,\n    description\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        name: _id,\n        onClick: handleEdit,\n        children: /*#__PURE__*/_jsxDEV(FaCog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        name: _id,\n        onClick: handleDelete,\n        children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, _id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n} // ShowToDoList component - will fetch docs and store in state \"todo\".\n\n\n_c = TodoCard;\nexport function ShowTodoList() {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  const [open, setOpen] = useState(false); // if edit button is clicked on any todo; open = true. This conditionally renders UpdateTodo\n\n  const [id, setId] = useState(\"\"); // passed as prop to UpdateTodo component\n\n  const [update, setUpdate] = useState(false); // used to fetch all todo docs\n\n  useEffect(function () {\n    axios.get(\"http://localhost:8000/api/todo\").then(res => {\n      console.log(res.data);\n      setTodo(res.data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, [update]); //Update state \"id\" w/ _id of doc\n\n  function handleEdit(e) {\n    setId(e.target.name);\n    setOpen(true);\n  } //inverts that state of update causeing useEffect hook to update the todo array\n\n\n  function handleUpdate() {\n    console.log(\"update:\", update, !update);\n    setUpdate(!update);\n  } //Sends DELETE req to server, using _id of document to delete. and update array \"todo\" with filtered array\n\n\n  function handleDelete(e) {\n    axios.delete(`http://localhost:8000/api/todo/${e.target.name}`);\n    setTodo(data => {\n      return data.filter(todo => todo._id !== e.target.name);\n    });\n  }\n\n  function handleClose() {\n    setId(\"\");\n    setOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/create-todo\",\n      className: \"button-new\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Subtitle\",\n        children: \"Share a favorite book of yours.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-container\",\n        children: todo.map(data => /*#__PURE__*/_jsxDEV(TodoCard, {\n          data: data,\n          handleEdit: handleEdit,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), open ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"update-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleClose,\n          className: \"close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(UpdateTodo, {\n          _id: id,\n          handleClose: handleClose,\n          handleUpdate: handleUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowTodoList, \"/J4w8EFVyyQKaPOu/Dd0lETAajw=\");\n\n_c2 = ShowTodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoCard\");\n$RefreshReg$(_c2, \"ShowTodoList\");","map":{"version":3,"names":["useState","useEffect","axios","Link","UpdateTodo","FaPlusCircle","FaCog","FaTrash","TodoCard","data","handleEdit","handleDelete","_id","title","description","ShowTodoList","todo","setTodo","open","setOpen","id","setId","update","setUpdate","get","then","res","console","log","catch","err","message","e","target","name","handleUpdate","delete","filter","handleClose","map"],"sources":["D:/Web Projects/mern-book-v1/client/src/components/showTodoList.jsx"],"sourcesContent":["// This component will READ all docs from database.\r\n// Use axios to send GET req to backend to fetch data, store with \"setTodo\" in \"todo\" state.\r\n// Use useEffect for GET to load data when page loads.\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"; \r\nimport { UpdateTodo } from \"./updateTodo\"; \r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport { FaCog } from \"react-icons/fa\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\n// TodoCard component - displays contents of todo. Use map to iterate over todo and pass contents to component.\r\nfunction TodoCard({ data, handleEdit, handleDelete }) { \r\n    const { _id, title, description } = data;\r\n\r\n    return (\r\n        <li key={_id}>\r\n            <div className=\"title-description\">\r\n                <h3>{title}</h3>\r\n                <p>{description}</p>\r\n            </div>\r\n\r\n            <div className=\"button-container\">\r\n               {/* Edit Button */}\r\n               <button className=\"button\" name={_id} onClick={handleEdit}> \r\n                    <FaCog />\r\n                </button>\r\n                {/* Delete Button */}\r\n                <button className=\"button\" name={_id} onClick={handleDelete}>\r\n                    <FaTrash />\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\n// ShowToDoList component - will fetch docs and store in state \"todo\".\r\nexport function ShowTodoList() {\r\n    const [todo, setTodo] = useState([]);\r\n    const [open, setOpen] = useState(false); // if edit button is clicked on any todo; open = true. This conditionally renders UpdateTodo\r\n    const [id, setId] = useState(\"\"); // passed as prop to UpdateTodo component\r\n    const [update, setUpdate] = useState(false); // used to fetch all todo docs\r\n\r\n    useEffect(\r\n        function () {\r\n            axios\r\n                .get(\"http://localhost:8000/api/todo\")\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setTodo(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.message);\r\n                });\r\n        },\r\n        [update]\r\n    );\r\n\r\n    //Update state \"id\" w/ _id of doc\r\n    function handleEdit(e) { \r\n        setId(e.target.name); \r\n        setOpen(true);\r\n    }\r\n\r\n    //inverts that state of update causeing useEffect hook to update the todo array\r\n    function handleUpdate() { \r\n        console.log(\"update:\", update, !update);\r\n        setUpdate(!update);\r\n    }\r\n\r\n    //Sends DELETE req to server, using _id of document to delete. and update array \"todo\" with filtered array\r\n    function handleDelete(e) { \r\n        axios.delete(`http://localhost:8000/api/todo/${e.target.name}`);\r\n\r\n        setTodo((data) => {\r\n            return data.filter((todo) => todo._id !== e.target.name);\r\n        });\r\n    }\r\n\r\n    function handleClose() { \r\n        setId(\"\");\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            <Link to=\"/create-todo\" className=\"button-new\">\r\n                <button className=\"button\">New</button>\r\n            </Link>\r\n            <section className=\"contents\">\r\n                <h1 className=\"Subtitle\">Share a favorite book of yours.</h1>\r\n            \r\n                <ul className=\"list-container\">\r\n                    {todo.map((data) => (\r\n                        <TodoCard\r\n                            data={data}\r\n                            handleEdit={handleEdit}\r\n                            handleDelete={handleDelete}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n            \r\n            {open ? (\r\n                <section className=\"update-container\">\r\n                    <div className=\"update-contents\">\r\n                        <p onClick={handleClose} className=\"close\">\r\n                            &times;\r\n                        </p>\r\n\r\n                        <UpdateTodo\r\n                            _id={id}\r\n                            handleClose={handleClose}\r\n                            handleUpdate={handleUpdate}\r\n                        />\r\n                    </div>\r\n                </section>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    "],"mappings":"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"},"metadata":{},"sourceType":"module"}