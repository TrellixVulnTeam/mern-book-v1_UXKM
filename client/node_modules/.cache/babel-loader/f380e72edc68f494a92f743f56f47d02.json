{"ast":null,"code":"import _slicedToArray from\"D:/Web Projects/mern-book-v1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// This component will READ all docs from database.\n// Use axios to send GET req to backend to fetch data, store with \"setTodo\" in \"todo\" state.\n// Use useEffect for GET to load data when page loads.\nimport{useState,useEffect}from\"react\";import axios from\"axios\";import{Link}from\"react-router-dom\";import{UpdateTodo}from\"./updateTodo\";import{FaPlusCircle}from\"react-icons/fa\";import{FaCog}from\"react-icons/fa\";import{FaTrash}from\"react-icons/fa\";// TodoCard component - displays contents of todo. Use map to iterate over todo and pass contents to component.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoCard(_ref){var data=_ref.data,handleEdit=_ref.handleEdit,handleDelete=_ref.handleDelete;var _id=data._id,title=data.title,description=data.description;return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title-description\",children:[/*#__PURE__*/_jsx(\"h3\",{children:title}),/*#__PURE__*/_jsx(\"p\",{children:description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",name:_id,onClick:handleEdit,children:/*#__PURE__*/_jsx(FaCog,{})}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",name:_id,onClick:handleDelete,children:/*#__PURE__*/_jsx(FaTrash,{})})]})]},_id);}// ShowToDoList component - will fetch docs and store in state \"todo\".\nexport function ShowTodoList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],setTodo=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];// if edit button is clicked on any todo; open = true. This conditionally renders UpdateTodo\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),id=_useState6[0],setId=_useState6[1];// passed as prop to UpdateTodo component\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),update=_useState8[0],setUpdate=_useState8[1];// used to fetch all todo docs\nuseEffect(function(){axios.get(\"http://localhost:8000/api/todo\").then(function(res){console.log(res.data);setTodo(res.data);}).catch(function(err){console.log(err.message);});},[update]);//Update state \"id\" w/ _id of doc\nfunction handleEdit(e){setId(e.target.name);setOpen(true);}//inverts that state of update causeing useEffect hook to update the todo array\nfunction handleUpdate(){console.log(\"update:\",update,!update);setUpdate(!update);}//Sends DELETE req to server, using _id of document to delete. and update array \"todo\" with filtered array\nfunction handleDelete(e){axios.delete(\"http://localhost:8000/api/todo/\".concat(e.target.name));setTodo(function(data){return data.filter(function(todo){return todo._id!==e.target.name;});});}function handleClose(){setId(\"\");setOpen(false);}return/*#__PURE__*/_jsxs(\"section\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"contents\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"Subtitle\",children:\"Share a favorite book of yours.\"}),/*#__PURE__*/_jsx(Link,{to:\"/create-todo\",className:\"button-new\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:/*#__PURE__*/_jsx(FaPlusCircle,{})})}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-container\",children:todo.map(function(data){return/*#__PURE__*/_jsx(TodoCard,{data:data,handleEdit:handleEdit,handleDelete:handleDelete});})})]}),open?/*#__PURE__*/_jsx(\"section\",{className:\"update-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"update-contents\",children:[/*#__PURE__*/_jsx(\"p\",{onClick:handleClose,className:\"close\",children:\"\\xD7\"}),/*#__PURE__*/_jsx(UpdateTodo,{_id:id,handleClose:handleClose,handleUpdate:handleUpdate})]})}):\"\"]});}","map":{"version":3,"names":["useState","useEffect","axios","Link","UpdateTodo","FaPlusCircle","FaCog","FaTrash","TodoCard","data","handleEdit","handleDelete","_id","title","description","ShowTodoList","todo","setTodo","open","setOpen","id","setId","update","setUpdate","get","then","res","console","log","catch","err","message","e","target","name","handleUpdate","delete","filter","handleClose","map"],"sources":["D:/Web Projects/mern-book-v1/client/src/components/showTodoList.jsx"],"sourcesContent":["// This component will READ all docs from database.\r\n// Use axios to send GET req to backend to fetch data, store with \"setTodo\" in \"todo\" state.\r\n// Use useEffect for GET to load data when page loads.\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"; \r\nimport { UpdateTodo } from \"./updateTodo\"; \r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport { FaCog } from \"react-icons/fa\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\n// TodoCard component - displays contents of todo. Use map to iterate over todo and pass contents to component.\r\nfunction TodoCard({ data, handleEdit, handleDelete }) { \r\n    const { _id, title, description } = data;\r\n\r\n    return (\r\n        <li key={_id}>\r\n            <div className=\"title-description\">\r\n                <h3>{title}</h3>\r\n                <p>{description}</p>\r\n            </div>\r\n\r\n            <div className=\"button-container\">\r\n               {/* Edit Button */}\r\n               <button className=\"button\" name={_id} onClick={handleEdit}> \r\n                    <FaCog />\r\n                </button>\r\n                {/* Delete Button */}\r\n                <button className=\"button\" name={_id} onClick={handleDelete}>\r\n                    <FaTrash />\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\n// ShowToDoList component - will fetch docs and store in state \"todo\".\r\nexport function ShowTodoList() {\r\n    const [todo, setTodo] = useState([]);\r\n    const [open, setOpen] = useState(false); // if edit button is clicked on any todo; open = true. This conditionally renders UpdateTodo\r\n    const [id, setId] = useState(\"\"); // passed as prop to UpdateTodo component\r\n    const [update, setUpdate] = useState(false); // used to fetch all todo docs\r\n\r\n    useEffect(\r\n        function () {\r\n            axios\r\n                .get(\"http://localhost:8000/api/todo\")\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setTodo(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.message);\r\n                });\r\n        },\r\n        [update]\r\n    );\r\n\r\n    //Update state \"id\" w/ _id of doc\r\n    function handleEdit(e) { \r\n        setId(e.target.name); \r\n        setOpen(true);\r\n    }\r\n\r\n    //inverts that state of update causeing useEffect hook to update the todo array\r\n    function handleUpdate() { \r\n        console.log(\"update:\", update, !update);\r\n        setUpdate(!update);\r\n    }\r\n\r\n    //Sends DELETE req to server, using _id of document to delete. and update array \"todo\" with filtered array\r\n    function handleDelete(e) { \r\n        axios.delete(`http://localhost:8000/api/todo/${e.target.name}`);\r\n\r\n        setTodo((data) => {\r\n            return data.filter((todo) => todo._id !== e.target.name);\r\n        });\r\n    }\r\n\r\n    function handleClose() { \r\n        setId(\"\");\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            \r\n            <section className=\"contents\">\r\n                <h1 className=\"Subtitle\">Share a favorite book of yours.</h1>\r\n                \r\n                {/* New Button */}\r\n                <Link to=\"/create-todo\" className=\"button-new\">\r\n                <button className=\"button\"><FaPlusCircle/></button>\r\n                </Link>\r\n            \r\n                <ul className=\"list-container\">\r\n                    {todo.map((data) => (\r\n                        <TodoCard\r\n                            data={data}\r\n                            handleEdit={handleEdit}\r\n                            handleDelete={handleDelete}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n            \r\n            {open ? (\r\n                <section className=\"update-container\">\r\n                    <div className=\"update-contents\">\r\n                        <p onClick={handleClose} className=\"close\">\r\n                            &times;\r\n                        </p>\r\n\r\n                        <UpdateTodo\r\n                            _id={id}\r\n                            handleClose={handleClose}\r\n                            handleUpdate={handleUpdate}\r\n                        />\r\n                    </div>\r\n                </section>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    "],"mappings":"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"},"metadata":{},"sourceType":"module"}