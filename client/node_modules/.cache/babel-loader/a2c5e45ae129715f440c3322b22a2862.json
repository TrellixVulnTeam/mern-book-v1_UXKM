{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Projects\\\\mern-todo\\\\client\\\\src\\\\components\\\\showTodoList.jsx\",\n    _s = $RefreshSig$();\n\n// This component will READ all docs from database.\n// Use axios to send GET req to backend to fetch data, store with \"setTodo\" in \"todo\" state.\n// Use useEffect for GET to load data when page loads.\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"; // added\n// TodoCard component - displays contents of todo. Use map to iterate over todo and pass contents to component.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoCard(_ref) {\n  let {\n    data\n  } = _ref;\n  const {\n    _id,\n    title,\n    description\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, _id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n} // ShowToDoList component - will fetch docs and store in state \"todo\".\n\n\n_c = TodoCard;\nexport function ShowTodoList() {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/todo\").then(res => {\n      console.log(res.data);\n      setTodo(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/create-todo\",\n      className: \"button-new\",\n      children: [\" // added\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-container\",\n        children: todo.map(data => /*#__PURE__*/_jsxDEV(TodoCard, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowTodoList, \"4iPjF1Dk4tBAVioxtSV8zxHVK4I=\");\n\n_c2 = ShowTodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoCard\");\n$RefreshReg$(_c2, \"ShowTodoList\");","map":{"version":3,"names":["useState","useEffect","axios","Link","TodoCard","data","_id","title","description","ShowTodoList","todo","setTodo","get","then","res","console","log","catch","err","map"],"sources":["D:/Web Projects/mern-todo/client/src/components/showTodoList.jsx"],"sourcesContent":["// This component will READ all docs from database.\r\n// Use axios to send GET req to backend to fetch data, store with \"setTodo\" in \"todo\" state.\r\n// Use useEffect for GET to load data when page loads.\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"; // added\r\n\r\n// TodoCard component - displays contents of todo. Use map to iterate over todo and pass contents to component.\r\nfunction TodoCard({ data }) {\r\n    const { _id, title, description } = data;\r\n    return (\r\n        <li key={_id}>\r\n            <div className=\"title-description\">\r\n                <h3>{title}</h3>\r\n                <p>{description}</p>\r\n            </div>\r\n\r\n            <div className=\"button-container\">\r\n                <button className=\"button\">edit</button>\r\n                <button className=\"button\">delete</button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\n// ShowToDoList component - will fetch docs and store in state \"todo\".\r\nexport function ShowTodoList() {\r\n    const [todo, setTodo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:8000/api/todo\")\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setTodo(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            <Link to=\"/create-todo\" className=\"button-new\"> // added\r\n                <button className=\"button\">New</button>\r\n            </Link>\r\n            <section className=\"contents\">\r\n                <h1>TODO</h1>\r\n                <ul className=\"list-container\">\r\n                    {todo.map((data) => (\r\n                        <TodoCard data={data} />\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n        </section>\r\n    );\r\n}"],"mappings":";;;AAAA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAAyC;AAEzC;;;;AACA,SAASC,QAAT,OAA4B;EAAA,IAAV;IAAEC;EAAF,CAAU;EACxB,MAAM;IAAEC,GAAF;IAAOC,KAAP;IAAcC;EAAd,IAA8BH,IAApC;EACA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACI;QAAA,UAAKE;MAAL;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAIC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAK,SAAS,EAAC,kBAAf;MAAA,wBACI;QAAQ,SAAS,EAAC,QAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,SAAS,EAAC,QAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA,GAASF,GAAT;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,C,CAED;;;KAjBSF,Q;AAkBT,OAAO,SAASK,YAAT,GAAwB;EAAA;;EAC3B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACZC,KAAK,CACAU,GADL,CACS,gCADT,EAEKC,IAFL,CAEWC,GAAD,IAAS;MACXC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACT,IAAhB;MACAM,OAAO,CAACG,GAAG,CAACT,IAAL,CAAP;IACH,CALL,EAMKY,KANL,CAMYC,GAAD,IAAS;MACZH,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACH,CARL;EASH,CAVQ,EAUN,EAVM,CAAT;EAYA,oBACI;IAAS,SAAS,EAAC,WAAnB;IAAA,wBACI,QAAC,IAAD;MAAM,EAAE,EAAC,cAAT;MAAwB,SAAS,EAAC,YAAlC;MAAA,qCACI;QAAQ,SAAS,EAAC,QAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAS,SAAS,EAAC,UAAnB;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,gBAAd;QAAA,UACKR,IAAI,CAACS,GAAL,CAAUd,IAAD,iBACN,QAAC,QAAD;UAAU,IAAI,EAAEA;QAAhB;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH;;GA9BeI,Y;;MAAAA,Y"},"metadata":{},"sourceType":"module"}